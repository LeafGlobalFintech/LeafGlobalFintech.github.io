"use strict";(self.webpackChunkleaf_loans=self.webpackChunkleaf_loans||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Overview","href":"/docs/overview","docId":"overview"},{"type":"link","label":"Contribution Guidelines","href":"/docs/contributing","docId":"contributing"},{"type":"category","label":"Forex Tool","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Contributing","href":"/docs/forex-docs/contributing","docId":"forex-docs/contributing"},{"type":"category","label":"Project Introduction","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Project Introduction","href":"/docs/forex-docs/project-intro/intro","docId":"forex-docs/project-intro/intro"}]}]},{"type":"category","label":"Leaf Loans","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/docs/leaf-loans/intro","docId":"leaf-loans/intro"},{"type":"link","label":"Dependencies","href":"/docs/leaf-loans/dependencies","docId":"leaf-loans/dependencies"},{"type":"link","label":"Architecture","href":"/docs/leaf-loans/architecture","docId":"leaf-loans/architecture"},{"type":"link","label":"Contributing","href":"/docs/leaf-loans/contributing","docId":"leaf-loans/contributing"},{"type":"category","label":"Reference","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Core","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/docs/leaf-loans/reference/core/overview","docId":"leaf-loans/reference/core/overview"},{"type":"category","label":"Integrations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Credo Data Collection","href":"/docs/leaf-loans/reference/core/integrations/credo-data-collection","docId":"leaf-loans/reference/core/integrations/credo-data-collection"},{"type":"link","label":"Dio HTTP","href":"/docs/leaf-loans/reference/core/integrations/dio-http","docId":"leaf-loans/reference/core/integrations/dio-http"},{"type":"link","label":"Event Bus","href":"/docs/leaf-loans/reference/core/integrations/event-bus","docId":"leaf-loans/reference/core/integrations/event-bus"},{"type":"link","label":"Firebase Analytics","href":"/docs/leaf-loans/reference/core/integrations/firebase-analytics","docId":"leaf-loans/reference/core/integrations/firebase-analytics"},{"type":"link","label":"Firebase Logger","href":"/docs/leaf-loans/reference/core/integrations/firebase-logger","docId":"leaf-loans/reference/core/integrations/firebase-logger"},{"type":"link","label":"Hive Local Storage","href":"/docs/leaf-loans/reference/core/integrations/hive-local-storage","docId":"leaf-loans/reference/core/integrations/hive-local-storage"},{"type":"link","label":"Remote Config","href":"/docs/leaf-loans/reference/core/integrations/remote-config","docId":"leaf-loans/reference/core/integrations/remote-config"}]}]},{"type":"link","label":"Utils","href":"/docs/leaf-loans/reference/utils","docId":"leaf-loans/reference/utils"},{"type":"category","label":"Authentication","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/docs/leaf-loans/reference/authentication/overview","docId":"leaf-loans/reference/authentication/overview"},{"type":"link","label":"Authentication Repository","href":"/docs/leaf-loans/reference/authentication/authentication-repository","docId":"leaf-loans/reference/authentication/authentication-repository"},{"type":"link","label":"Authentication Helper","href":"/docs/leaf-loans/reference/authentication/auth-helper","docId":"leaf-loans/reference/authentication/auth-helper"}]},{"type":"category","label":"Features","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"About","href":"/docs/leaf-loans/reference/features/about","docId":"leaf-loans/reference/features/about"},{"type":"link","label":"Articles","href":"/docs/leaf-loans/reference/features/articles","docId":"leaf-loans/reference/features/articles"},{"type":"link","label":"Home","href":"/docs/leaf-loans/reference/features/home","docId":"leaf-loans/reference/features/home"},{"type":"link","label":"Loan Application","href":"/docs/leaf-loans/reference/features/loan-application","docId":"leaf-loans/reference/features/loan-application"},{"type":"link","label":"Loan Detail","href":"/docs/leaf-loans/reference/features/loan-detail","docId":"leaf-loans/reference/features/loan-detail"},{"type":"link","label":"Loan History","href":"/docs/leaf-loans/reference/features/loan-history","docId":"leaf-loans/reference/features/loan-history"},{"type":"link","label":"Loan Payment","href":"/docs/leaf-loans/reference/features/loan-payment","docId":"leaf-loans/reference/features/loan-payment"},{"type":"link","label":"Onboarding","href":"/docs/leaf-loans/reference/features/onboarding","docId":"leaf-loans/reference/features/onboarding"},{"type":"link","label":"Settings","href":"/docs/leaf-loans/reference/features/settings","docId":"leaf-loans/reference/features/settings"},{"type":"link","label":"Splash","href":"/docs/leaf-loans/reference/features/splash","docId":"leaf-loans/reference/features/splash"},{"type":"link","label":"User Profile","href":"/docs/leaf-loans/reference/features/user-profile","docId":"leaf-loans/reference/features/user-profile"}]}]}]},{"type":"link","label":"Commit Message Structure","href":"/docs/commit-messages","docId":"commit-messages"},{"type":"link","label":"Code of Conduct","href":"/docs/code_of_conduct","docId":"code_of_conduct"}]},"docs":{"code_of_conduct":{"id":"code_of_conduct","title":"Code of Conduct","description":"Our Pledge","sidebar":"tutorialSidebar"},"commit-messages":{"id":"commit-messages","title":"Commit Message Structure","description":"- If you are committing a feature, add feat: prefix then add description of the message.","sidebar":"tutorialSidebar"},"contributing":{"id":"contributing","title":"Contribution Guidelines","description":"First of all, thanks for thinking of contributing to this project. Please follow the following instructions while contributing to any of our projects.","sidebar":"tutorialSidebar"},"forex-docs/contributing":{"id":"forex-docs/contributing","title":"Contributing","description":"Prerequisites","sidebar":"tutorialSidebar"},"forex-docs/project-intro/intro":{"id":"forex-docs/project-intro/intro","title":"Project Introduction","description":"Forex Exchange at your fingertips.","sidebar":"tutorialSidebar"},"leaf-loans/architecture":{"id":"leaf-loans/architecture","title":"Architecture","description":"We have followed Clean Architecture, as much as possible, to implement features. We have separate layers which communicate through interfaces. We also have inversion of control to avoid direct and hard-to-replace dependencies on packages and plugins.","sidebar":"tutorialSidebar"},"leaf-loans/contributing":{"id":"leaf-loans/contributing","title":"Contributing","description":"Prerequisites","sidebar":"tutorialSidebar"},"leaf-loans/dependencies":{"id":"leaf-loans/dependencies","title":"Dependencies","description":"Leaf Loans depends on the following packages to achieve functionality and architectural requirements. A description about why each package is used is provided below.","sidebar":"tutorialSidebar"},"leaf-loans/intro":{"id":"leaf-loans/intro","title":"Introduction","description":"Leaf Loans allows Leaf customers to apply for, obtain, and pay off microloans. It works in conjunction with Leaf\u2019s core wallet to support the storage and transport of assets across borders.","sidebar":"tutorialSidebar"},"leaf-loans/reference/authentication/auth-helper":{"id":"leaf-loans/reference/authentication/auth-helper","title":"Authentication Helper","description":"The AuthHelper class defines a few methods that help in authenticating with the API.","sidebar":"tutorialSidebar"},"leaf-loans/reference/authentication/authentication-repository":{"id":"leaf-loans/reference/authentication/authentication-repository","title":"Authentication Repository","description":"The AuthenticationRemoteRepo is responsible for making calls to the API with a given username and password. It also has a method isAuthenticated that checks if there is a user logged in on the app or not.","sidebar":"tutorialSidebar"},"leaf-loans/reference/authentication/overview":{"id":"leaf-loans/reference/authentication/overview","title":"Overview","description":"This part of the app is responsible for taking care of the user authentication, and limiting access to the app based on authentication status.","sidebar":"tutorialSidebar"},"leaf-loans/reference/core/integrations/credo-data-collection":{"id":"leaf-loans/reference/core/integrations/credo-data-collection","title":"Credo Data Collection","description":"This integration implements the ScoringDataCollectionService which defines a method to scrape data and submit it to a certain API endpoint.","sidebar":"tutorialSidebar"},"leaf-loans/reference/core/integrations/dio-http":{"id":"leaf-loans/reference/core/integrations/dio-http","title":"Dio HTTP","description":"Dio is used as an HTTP client. Based on the return type definition on the HttpHelper interface.","sidebar":"tutorialSidebar"},"leaf-loans/reference/core/integrations/event-bus":{"id":"leaf-loans/reference/core/integrations/event-bus","title":"Event Bus","description":"EventBusAbstraction defines three methods: fire, destroy, and on. fire adds an event to the stream which is returned by on and can be listened to.","sidebar":"tutorialSidebar"},"leaf-loans/reference/core/integrations/firebase-analytics":{"id":"leaf-loans/reference/core/integrations/firebase-analytics","title":"Firebase Analytics","description":"Firebase is used for analytics and most of the methods defined in the Analytics interface are inspired by the methods exposed by Firebase. But to make the interface as versatile as possible, all return types are types available out of the box in dart. The same applies to the arguments on the methods.","sidebar":"tutorialSidebar"},"leaf-loans/reference/core/integrations/firebase-logger":{"id":"leaf-loans/reference/core/integrations/firebase-logger","title":"Firebase Logger","description":"FirebaseLogger uses crashlytics to record errors and stacktraces. Messages and errors can be logged and setUserId is called on login so that the error could be associated with the user. This will help us debug user specific errors.","sidebar":"tutorialSidebar"},"leaf-loans/reference/core/integrations/hive-local-storage":{"id":"leaf-loans/reference/core/integrations/hive-local-storage","title":"Hive Local Storage","description":"This integration adds local storage caching for the app. The methods are generic and can be overridden by any local storage library that can store the given types. Since we are using hive, it had to be initialized in order to be used. This is done at the start of the app.","sidebar":"tutorialSidebar"},"leaf-loans/reference/core/integrations/remote-config":{"id":"leaf-loans/reference/core/integrations/remote-config","title":"Remote Config","description":"In order to enable and disable some features remotely, we are using Firebase Remote Config. The interface being overridden here is RemoteConfiguration and it defines 5 methods to get the actually values for the settings set on the Firebase console.","sidebar":"tutorialSidebar"},"leaf-loans/reference/core/overview":{"id":"leaf-loans/reference/core/overview","title":"Overview","description":"Inside core, we have the highest number of subcategories. This is because everything that is used by more than one feature and doesn\'t have a specific semantic meaning that belongs to a specific feature is included here.","sidebar":"tutorialSidebar"},"leaf-loans/reference/features/about":{"id":"leaf-loans/reference/features/about","title":"About","description":"This part of the code base contains the about page which is navigated to through the settings page.","sidebar":"tutorialSidebar"},"leaf-loans/reference/features/articles":{"id":"leaf-loans/reference/features/articles","title":"Articles","description":"Articles at the moment only has a static list of articles that is displayed in a list of cards which launch the link on a browser. This list is also used on the homepage when the user doesn\'t have active loans, if they do, it is shown on the articles pages.","sidebar":"tutorialSidebar"},"leaf-loans/reference/features/home":{"id":"leaf-loans/reference/features/home","title":"Home","description":"The home component does not have it\'s own data and domain layer. It instead uses the repository layer from other features.","sidebar":"tutorialSidebar"},"leaf-loans/reference/features/loan-application":{"id":"leaf-loans/reference/features/loan-application","title":"Loan Application","description":"The components here are responsible for the entire flow of the loan application.","sidebar":"tutorialSidebar"},"leaf-loans/reference/features/loan-detail":{"id":"leaf-loans/reference/features/loan-detail","title":"Loan Detail","description":"The loan detail page has no data and domain layers of itself, it instead relies on the methods exposed by LoanPaymentRepo.","sidebar":"tutorialSidebar"},"leaf-loans/reference/features/loan-history":{"id":"leaf-loans/reference/features/loan-history","title":"Loan History","description":"This component has a repository which defines two methods: getLoans and getActiveLoan.","sidebar":"tutorialSidebar"},"leaf-loans/reference/features/loan-payment":{"id":"leaf-loans/reference/features/loan-payment","title":"Loan Payment","description":"This component takes care of everything loan payment related. On the repository we have getLoanPayment, getLoanPayments, getUserPayments and payLoan which are self explanatory.","sidebar":"tutorialSidebar"},"leaf-loans/reference/features/onboarding":{"id":"leaf-loans/reference/features/onboarding","title":"Onboarding","description":"This component shows the intro slides that are shown when the user first interacts with the app. The content here is static and the only event being analyzed is when a user skips the slides.","sidebar":"tutorialSidebar"},"leaf-loans/reference/features/settings":{"id":"leaf-loans/reference/features/settings","title":"Settings","description":"The settings page has the option to allow a user change the app language, change the app theme and go to the about page.","sidebar":"tutorialSidebar"},"leaf-loans/reference/features/splash":{"id":"leaf-loans/reference/features/splash","title":"Splash","description":"The splash screen serves as more than just a branding piece. It checks the user authentication status and decides which page to take the user to. It also checks whether or not the user has seen the onboarding slides have been seen.","sidebar":"tutorialSidebar"},"leaf-loans/reference/features/user-profile":{"id":"leaf-loans/reference/features/user-profile","title":"User Profile","description":"Currently, the user profile component has two repositories. One is the repository that fetches the user info (UserRepository) and the other is the repository that fetches wallet related info (WalletRepository). The latter is being used in the loan payment screen to get the user\'s current balance.","sidebar":"tutorialSidebar"},"leaf-loans/reference/utils":{"id":"leaf-loans/reference/utils","title":"Utils","description":"Inside utils we have classes that expose methods that are frequently used inside the app. Having them in one place decreases code repetition and allows for easy changes in implementation.","sidebar":"tutorialSidebar"},"overview":{"id":"overview","title":"Overview","description":"This section of the documentation goes in a bit of detail about how the Loans App is constructed, what is needed to run it and also about the features it currently has.","sidebar":"tutorialSidebar"}}}')}}]);